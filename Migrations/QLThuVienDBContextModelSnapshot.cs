// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PRO131_Duan1_FA23.Core.Context;

#nullable disable

namespace PRO131_Duan1_FA23.Migrations
{
    [DbContext(typeof(QLThuVienDBContext))]
    partial class QLThuVienDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PRO131_Duan1_FA23.Core.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("MaNV")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("NgayMuon")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("NgayTra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SoDT")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("TenKhachHang")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("PRO131_Duan1_FA23.Core.Models.KhachHangSach", b =>
                {
                    b.Property<int>("STT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("STT"));

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("MaNV")
                        .HasColumnType("text");

                    b.Property<string>("MaSach")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.HasKey("STT");

                    b.ToTable("KhachHangSach");
                });

            modelBuilder.Entity("PRO131_Duan1_FA23.Core.Models.NhaXB", b =>
                {
                    b.Property<string>("MaXB")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MaNV")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("SoDT")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("TenNhaXB")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("MaXB");

                    b.ToTable("nhaXBs");
                });

            modelBuilder.Entity("PRO131_Duan1_FA23.Core.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNV")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<byte[]>("Hinh")
                        .HasColumnType("bytea");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SoDT")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("TenNV")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("boolean");

                    b.Property<bool>("VaiTro")
                        .HasColumnType("boolean");

                    b.HasKey("MaNV");

                    b.ToTable("nhanViens");
                });

            modelBuilder.Entity("PRO131_Duan1_FA23.Core.Models.Sach", b =>
                {
                    b.Property<string>("MaSach")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("LoaiSach")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("MaNV")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<string>("MaXB")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.Property<string>("TacGia")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TenSach")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("boolean");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("MaSach");

                    b.ToTable("sachs");
                });
#pragma warning restore 612, 618
        }
    }
}
